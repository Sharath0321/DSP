CODE:
clc;
close all;
clear all;
xn=input('Enter the sequence x(n)');
N=length(xn); 
xk=zeros(1,N); 
ixk=zeros(1,N); 
j=sqrt(-1);
for k=0:N-1
for n=0:N-1
xk(k+1)=xk(k+1)+(xn(n+1)*exp((-j)*2*pi*k*n/N));
end
end
%code block to plot the input sequence
n=0:N-1;
fprintf('Dft Values')
disp(xk)
subplot(3,1,1);
stem(n,xn);
ylabel('Amplitude');
xlabel('Time Index');
title('Input signal');
magnitude=abs(xk); 
k=0:N-1;
subplot(3,1,2);
stem(k,magnitude);
ylabel ('Amplitude');
xlabel ('k');
title('magnitude response');
phase=angle(xk); 
%code block to plot the magnitude sequence
k=0:N-1;
subplot(3,1,3);
stem(k,phase);
ylabel ('Phase');
xlabel ('k');
title('phase response');





1B) USING BUILT-IN FUNCTION FFT:

CODE:
x=input('Enter a sequence x[n] =');
N=input('Enter the value of N=') 
xk=fft(x,N);
disp('The DFT values of x[n] are X(k)=');
disp(xk);
%Plot amplitude spectrum
n=0:1:N-1;
mag=abs(xk);
figure(1);
stem(n,mag);
xlabel('k');
ylabel('Magnitude of X(k)');
title('Magnitude spectrum');
%Plot phase spectrum
phase= angle(xk);
figure(2);
datacursormode on
stem(n,phase);
xlabel('k');
ylabel('Angle X(k)');
title('phase Spectrum');
figure(3);
n1=0:1:length(x)-1;
datacursormode on
stem(n1,x);
xlabel('n');
ylabel('x[n]');
title('Original Signal');








1C) DFT COMPUTATION USING FUNCTION FILE:

FUNCTION FILE: (save the file name as dft.m)
function[Xk] =dft(xn,N)
n=[0:1:N-1];
k=[0:1:N-1];
WN=exp(-j*2*pi/N);
nk=n'*k;
WNnk=WN.^nk;
Xk=xn*WNnk;
end

MAIN FILE:
xn=input('Enter the sequence x(n)='); 
N=length(xn); 
Xk=dft(xn,N)
%code block to plot the input sequence
n=0:N-1;
subplot(3,1,1);
stem(n,xn);
ylabel ('Amplitude');
xlabel ('Time Index');
title('Input signal');
magnitude=abs(Xk); 
%code block to plot the magnitude response
k=0:N-1;
subplot(3,1,2);
stem(k,magnitude);
ylabel ('Amplitude');
xlabel ('k');
title('Magnitude response');
phase=angle(Xk); % Find the phases of individual DFT
k=0:N-1;
subplot(3,1,3);
stem(k,phase);
ylabel ('Phase');
xlabel ('k');
title('Phase response');


